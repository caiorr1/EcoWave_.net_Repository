// <auto-generated />
using System;
using EcoWave.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EcoWave.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoWave.Models.Amigo", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnOrder(0);

                    b.Property<int>("AmigoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DataAmizade")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("UsuarioId", "AmigoId");

                    b.HasIndex("AmigoId");

                    b.ToTable("Amigos");
                });

            modelBuilder.Entity("EcoWave.Models.Configuracao", b =>
                {
                    b.Property<int>("ConfiguracaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfiguracaoId"));

                    b.Property<string>("NomeConfiguracao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ValorConfiguracao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("ConfiguracaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Configuracoes");
                });

            modelBuilder.Entity("EcoWave.Models.ItemReciclado", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<DateTime>("DataColeta")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TipoItem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ItemId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ItensReciclados");
                });

            modelBuilder.Entity("EcoWave.Models.Localizacao", b =>
                {
                    b.Property<int>("LocalizacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalizacaoId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("NomeLocalizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("LocalizacaoId");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("EcoWave.Models.Recompensa", b =>
                {
                    b.Property<int>("RecompensaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecompensaId"));

                    b.Property<DateTime?>("DataResgate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Pontos")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TipoRecompensa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("RecompensaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Recompensas");
                });

            modelBuilder.Entity("EcoWave.Models.ReconhecimentoItem", b =>
                {
                    b.Property<int>("ReconhecimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReconhecimentoId"));

                    b.Property<DateTime>("DataReconhecimento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("TipoItem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("UrlImagem")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ReconhecimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ReconhecimentoItens");
                });

            modelBuilder.Entity("EcoWave.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("FotoPerfil")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EcoWave.Models.Amigo", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "AmigoUsuario")
                        .WithMany("AmigosDoUsuario")
                        .HasForeignKey("AmigoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("Amigos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AmigoUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.Configuracao", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("Configuracoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.ItemReciclado", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("ItensReciclados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.Recompensa", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("Recompensas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.ReconhecimentoItem", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("ReconhecimentoItens")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.Usuario", b =>
                {
                    b.Navigation("Amigos");

                    b.Navigation("AmigosDoUsuario");

                    b.Navigation("Configuracoes");

                    b.Navigation("ItensReciclados");

                    b.Navigation("Recompensas");

                    b.Navigation("ReconhecimentoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
