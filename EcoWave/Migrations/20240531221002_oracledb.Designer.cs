// <auto-generated />
using System;
using EcoWave.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EcoWave.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240531221002_oracledb")]
    partial class oracledb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoWave.Models.Amigo", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("AmigoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("DataAmizade")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("UsuarioId", "AmigoId");

                    b.HasIndex("AmigoId");

                    b.ToTable("Amigos");
                });

            modelBuilder.Entity("EcoWave.Models.Configuracao", b =>
                {
                    b.Property<int>("configuracao_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("configuracao_id"));

                    b.Property<string>("nome_configuracao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("valor_configuracao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("configuracao_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("Configuracoes");
                });

            modelBuilder.Entity("EcoWave.Models.ItemReciclado", b =>
                {
                    b.Property<int>("item_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("item_id"));

                    b.Property<DateTime>("data_coleta")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<int>("quantidade")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("tipo_item")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("item_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("ItensReciclados");
                });

            modelBuilder.Entity("EcoWave.Models.Localizacao", b =>
                {
                    b.Property<int>("localizacao_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("localizacao_id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<double?>("latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("nome_localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("localizacao_id");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("EcoWave.Models.Recompensa", b =>
                {
                    b.Property<int>("recompensa_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("recompensa_id"));

                    b.Property<DateTime?>("data_resgate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("pontos")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("tipo_recompensa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("recompensa_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("Recompensas");
                });

            modelBuilder.Entity("EcoWave.Models.ReconhecimentoItem", b =>
                {
                    b.Property<int>("reconhecimento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reconhecimento_id"));

                    b.Property<DateTime>("data_reconhecimento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("tipo_item")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("url_imagem")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("reconhecimento_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("ReconhecimentoItens");
                });

            modelBuilder.Entity("EcoWave.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("FotoPerfil")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EcoWave.Models.Amigo", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "AmigoUsuario")
                        .WithMany("AmigosDoUsuario")
                        .HasForeignKey("AmigoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("Amigos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AmigoUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.Configuracao", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("Configuracoes")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.ItemReciclado", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("ItensReciclados")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.Recompensa", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("Recompensas")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.ReconhecimentoItem", b =>
                {
                    b.HasOne("EcoWave.Models.Usuario", "Usuario")
                        .WithMany("ReconhecimentoItens")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWave.Models.Usuario", b =>
                {
                    b.Navigation("Amigos");

                    b.Navigation("AmigosDoUsuario");

                    b.Navigation("Configuracoes");

                    b.Navigation("ItensReciclados");

                    b.Navigation("Recompensas");

                    b.Navigation("ReconhecimentoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
